<?php
/*
  Plugin Name: Google Analytics for WP-AppKit
  Description: A powerful and easy way to track app's usage
  Version: 1.1.1
 */

if ( !class_exists( 'WpAppKitGoogleAnalytics' ) ) {

    /**
     * Google Analytics addon main manager class.
     */
    class WpAppKitGoogleAnalytics {

    	const name = 'Google Analytics for WP-AppKit';
        const slug = 'wpak-addon-googleanalytics';
        const i18n_domain = 'wpak-addon-googleanalytics';

        /**
         * Main entry point.
         *
         * Adds needed callbacks to some hooks.
         */
        public static function hooks() {
            add_filter( 'wpak_addons', array( __CLASS__, 'wpak_addons' ) );
            add_filter( 'wpak_default_phonegap_build_plugins', array( __CLASS__, 'wpak_default_phonegap_build_plugins' ), 10, 3 );
            add_action( 'plugins_loaded', array( __CLASS__, 'plugins_loaded' ) );
			add_filter( 'wpak_licenses', array( __CLASS__, 'add_license' ) );
	        add_filter( 'wpak_pwa_service_worker', array( __CLASS__, 'add_service_worker' ), 10, 2 );
        }

        /**
         * Attached to 'wpak_addons' hook.
         *
         * Filter available addons and register this one for all WP-AppKit applications.
         *
         * @param array             $addons            Available addons.
         *
         * @return array            $addons            Addons with Google Analytics (this one).
         */
        public static function wpak_addons( $addons ) {
            $addon = new WpakAddon( self::name, self::slug, array( 'ios', 'android', 'pwa' ) );

            $addon->set_location( __FILE__ );

            $addon->add_js( 'js/wpak-googleanalytics.js', 'module' );
            $addon->add_js( 'js/wpak-googleanalytics-app.js', 'init', 'before' );

            $addon->require_php( dirname(__FILE__) .'/wpak-googleanalytics-bo-settings.php' );

            $addons[] = $addon;

            return $addons;
        }

        /**
         * Attached to 'wpak_default_phonegap_build_plugins' hook.
         *
         * Filter default plugins included into the PhoneGap Build config.xml file.
         *
         * @param array             $default_plugins            The default plugins.
         * @param string            $export_type                Export type : 'phonegap-build' or 'phonegap-cli'
         * @param int               $app_id                     The App ID.
         *
         * @return array            $default_plugins            Plugins with Google Analytics one in addition.
         */
        public static function wpak_default_phonegap_build_plugins( $default_plugins, $export_type, $app_id ) {
            if( WpakAddons::addon_activated_for_app( self::slug, $app_id ) ) {
                $default_plugins['cordova-plugin-google-analytics'] = array( 'spec' => '1.8.6', 'source' => 'npm' );
            }

            return $default_plugins;
        }

        /**
         * Attached to 'plugins_loaded' hook.
         *
         * Register the addon textdomain for string translations.
         */
        public static function plugins_loaded() {
            load_plugin_textdomain( self::i18n_domain, false, dirname( plugin_basename( __FILE__ ) ) . '/lang/' );
        }

        /**
         * Register license management for this addon.
         *
         * @param array $licenses Licenses array given by WP-AppKit's core.
         * @return array
         */
        public static function add_license( $licenses ) {
            $licenses[] = array(
                'file' => __FILE__,
                'item_name' => self::name,
                'version' => '1.1.1',
                'author' => 'Uncategorized Creations',
            );
            return $licenses;
        }

	    /**
	     * Prepend the service worker script to the one already generated by WP-AppKit Core.
	     *
	     * @param string    $service_worker_content
	     * @param int       $app_id
	     *
	     * @return string
	     */
	    public static function add_service_worker( $service_worker_content, $app_id ) {
		    if( !WpakAddons::addon_activated_for_app( self::slug, $app_id ) ) {
			    return $service_worker_content;
		    }

		    $service_worker = file_get_contents( dirname( __FILE__ ) . '/js/service-worker-googleanalytics.js' );

		    $debug_mode = WpakBuild::get_app_debug_mode( $app_id );
		    if( $debug_mode != 'on' ) {
		    	// Not in debug mode, remove debug code
			    $service_worker = preg_replace( '`/\* DEBUG \*/.*/\* /DEBUG \*/`Us', '', $service_worker );
		    }

		    $service_worker_content = $service_worker . $service_worker_content;

		    return $service_worker_content;
	    }
    }

    WpAppKitGoogleAnalytics::hooks();
}
